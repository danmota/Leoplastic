<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_export_Excel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAPBQTFRF////
        H3JEHGc95ubmFlIxuLi46ejpt8y/EXA/t8m+B2AycpeB3+LhDGU38u7x7OnrH29CGFg0e5+KAFoombGi
        iq2ZbZyCnrep+fL2v83Fr8C2O3VSfaSOAFwtp7ywt8a+LnBKwtXKPoJbLHZMxcXFJWhAk6SaAEggwLy+
        h6OTJVk7eJCDhpaMAE0oZIRyL11BrrKvVXRhAGg07fTw2eXenLuoAGMt3+vky97TUItpqMi2d6mOVZFv
        kLihAFIYnKqiY519OXxU0NjTRoJfnsKvVYNqYoZyc5GBUn1lgrCXUIlp1dDSUJRvMIBVAF4ikaSZEY+e
        HgAACf5JREFUeF7tnQt32jgWgGO2DQopDZkUMsmQTmxPOtPpZHbXBmxeDXn0kTZs//+/GT2uQdc2Rg42
        CFZfz+mJFSf112vrSrIk9gwGg8FgMBgMBoPBoDG+36mOR082HO4Uvh+E1fHEIR4hzq4ZUjd70Jw4FpWz
        GLtk6Ad2tdumcgTkOLtiGNgPzdbIcZEcZwcMA3s8HN3fujR0IIXYbkMqN3FcqpHqJthSQ5YIHp8sL6pO
        Mtg6Q5YIBo+jKUsE4JDNNhnyRPAoshxcvgJbYuh30hKBEvobUrkBSwTPkOPobRhUeSJ4rhxHW0MqNxFJ
        7vlyHA0N/c7g8YmwRLCim0AnQ5EInqZUDq6uCDQx9ANan+TJcups3lAkAipX0F0ZZ6OGtOm1UiJQwgnh
        X1szbIBhOOmvlgiUcA/fY5or0l3+X9YZFJQIlGgcv0AcV1bk6vLbAExS8AfDJ2a2DjWgcEPKxcgHoQTV
        3jrlOGUYVmrfFilW1+1XkmGl3lqguDOGlcsqKMXYHcNFQdyE4fXviOuLlTi5qAvF+/SksQFD9/NfMh9+
        nK7IN1BMv003YXjzB+L70euV2D+sccH6AThhNmH47o+XMr/9ayX2XxlD+HfXhzHMiTE0hiVgDHNiDDdh
        mGzT0D+c10f7cNmsYFY4/zs6gNMYOhp+uXknc/OrxCtx7XdwuIg7fhZHQ8PG8Z+Yyzm/nL1mV33UrkBB
        OpXTeRC1NISOIcD6h3UK/at2dSAMfzqhRxVWFH1L/A1FF2+2zjDiMjK8gIJ0asZQwhiWgDGkGENjKGMM
        S8AYUoyhMZQxhiXwf2AYe/f0+8XJjAoYHn6EgnQ+am749W/El7bE3RG/6rdwuIhfuRxHQ0P35juM0Ai+
        /ywBsXkNh4vg/w8CHQ23b6ytQQjxGGrTOrbMkM3EmU6d/qjVbja7g+4UyjPQ1ZAFCr6UcQZ22Ol0gsD3
        2USBgcKvo4YyL3/b52Ogguiy4XAR86p0RcMGvfV6FDbBdOqkxIc8wu8R+I6K4Y+X/5F5efdqDlz2K7ks
        yV10HmU1Q2c0GY4fWJhYhML7xMkunv/Q7UF5FlnjpZfnkPGXjJcWlQ+9CZ6i0oyf7LXgOwKfNOAbWWS0
        aepXkeEJlKRSPyks43t4Aod9C+URHg7ho0oIM1ttM8N1tdq82JS/Fj7bG0G5IPCgPButDONBjFWVPfzd
        4VYa9uE8Aa4riQPFgtDN/l0RehlaPTztHD1pPTwzt60mqJthLIiBZEim6CFNVEOL0Mww/iQ+zZ81rwtl
        HF81hNoZElxf2jND4gRQxqkqPoX6GVoNFMR5XeM15ZvUV6xIKdoZEjz3tgsm5BZleztrbTNGO0PLRUHs
        TMVPkDYKYUs5hBoaxlzawgV728oR1NLQRTlRyMTu3ZF6CDU0tDwUxGDCbVC2Hyg1uQENDRsWqlRY45T0
        UQjh2VSjcXx9/eJ6xovjGp9LwqhVIsMTKEmlVlzvCfCGsk+HdoS9Bzjg5Aqh1fj6X8TXQ4kzMV56+hmO
        0/l0XrBhw+rA6ZwmIS6qfFTGLua4P2IjUdKQhPSlKoUY0iDC6Zyq25vAl5woRSqSHGvbnwOXLRelAWcx
        ijG0iBxEf/Q/OVUEyeGbTPQcTcRBbHvyTdrNJ6jreKknN7MfnuALBqt4cqGroRzEUE6GiQG4ZSQM94/g
        6aJEl70MOI9SlKHloup0TpivIqW4f8OaLuDHW4k7fu37Z3C4iDJm0MZGtyP8cb6KlMIyPqI2p/4WMv5H
        KEin8IzPIOnL6KOuRg40bLUJSBN+BPGYO4QaG96nPImd3BHU2NAiaORJIPoZ+dDY0EkEMczV5Ab0NbS8
        xN4Mw90ybOC+PiP0VF6nxdDXEHf1BepjiHO0NSS3KTvndGjfMS/6Gqbmw/xNGn0N8QhwxA61aRa0S/N2
        8CmaGpJbqYOIxqX6eYOoqWFvDD/AGKAuPpyhjJ6G6G2oP5I7/MEoZxCVDDNnm1RKWJ3Xk8dHbQvljQc4
        R5Vk/7AO3T7aPxSG+z+dzMtSKL5/SBx0X/bQuJSf80l0v7yD3r3g3blE1MeHw0UU3sdH00r8lkfgS8Eg
        X3XqJmfuweALJbrsZcB5lEIM8eyvqtVA9c7eXj+XopZjbfJzx95nkykcCOxcXQwNDfGLmdClTdFYRyrP
        60MNDXGvyecjM7EZGqHSpEQgcxcleMCWbaxU7HOI33J3WAjpZaKX3Ll6Ue6HG8yZRLTjABwuoti6FPea
        oDNB2nAsCHP0ohp//hvziwSMl76/hON0LgvdcYDg5AcqseFTv6kexGSbBl7tUiqnUZsGCtIpNuPj4fxx
        VG3Guovh7fKbAchqtc0M19gu9XCvaTZhPz4Grv6OTTND/D5772Ge+WLDp+ov2TQzxK0XX9LwUA8jRxD1
        MozNIR3INSbBCUP5Zbdehrjt4k/ks+NrFVSDqJWhhycGVdnnq8yJrUVQnXSilyG+EWPTgD005wRVQ1no
        ZOjh6Xm2aLDN6cVe1aiNLGoVQ9ReS7Zb8BwU+suUGjYaGeImd+qcBFzXqPWidIrhsGrbYdiBtYUpY78e
        7uurTaTV6i613Fvnvj9qsQWi45QQknscRKXJ0HoZ8qWjAJRg0CxMNtC4PIqaGS7DdfqjyfCRL8MMfFob
        KRhm7Dhw8kYYHn6UCxOsdccBQuqwlJatpZ0qrHTO3HEAZtAu23HggMtxSjfEqPT0EzsOyNsLwFJns+OA
        hDE0hiWQGC+VHrpoIHS7n0Pr8wfE+zczuqfw7umgCSULOONyHA0NaT6EF4cc9OkP0f6lNB9mofsOPBlt
        GrNPFGAMZYxhCRhDijE0hjLGsASMIcUYGkMZY1gCGYZ16dMfsti2T3+4mjGPYQ1K0tE8hok1pKewMJQR
        zS+Vy5Kc6v0pLEXMazPjpRLGsASMYU6MoTEsAWOYE2O4CcNiP/H45yP9DL/AxwICN+cHK3H+SRjiDR5n
        bMAwMRcDJlg8G/hY7rSV2JRNGGb0gFdAp0+PL8fw6i0oxdgdwwUh3Kt6a1csxbCWtrcMJxhPpoR9MMD6
        KMPw4h4vHIjh20xz4eS8oomvA5ZXBT2PWiN1v4cYfvgwHDmua5Xu6X6C/R0Fnw9bK9KsLngEUwjCwWOr
        7zDN8jzTt9RaJ1Sz22712X0L11QsTnpmXjN+ENqDJtMsvhLSw5DjB52wOp44FtUs0FMjQ4Hvd+xuyyku
        pWhnCAT2g8icK3vqasjhKeXWZXOf4XKfgdaGHH/FlKK/ISdKKc+I5pYYcoKwSlPKKGdK2SZDjk9TSnf4
        pK65dYYcmjrth6FjqdS122ko8FldyzNnluY2GwpoXUtTClVZ4Ln9hpyMlLIjhhyq2W1P+rdYc5cMOX6U
        UiLNnTPkiJTCMyfZTUMOSymD4dMOG3LEmmKDwWAwGAwGg8FgMGyevb1/AKyq6n1DnBF9AAAAAElFTkSu
        QmCC
</value>
  </data>
</root>