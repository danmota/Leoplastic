<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_export_Excel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Q5wRfQAAAABJRU5ErkJggg==
</value>
  </data>
</root>